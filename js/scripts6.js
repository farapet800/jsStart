// Создайте функцию unique(arr), которая вернёт массив уникальных, не повторяющихся значений массива arr.
const unique1 = (array) => Array.from(new Set(array));
console.log(unique1(["кришна", "кришна", "харе", "харе",
    "харе", "харе", "кришна", "кришна", ":-O"]));

console.log('----------------------');

// Задача.Мы хотели бы получить массив ключей map.keys() в переменную и далее работать с ними, например, применить метод .push.
// Но это не выходит:

// let map = new Map();
//
// map.set("name", "John");
//
// let keys = map.keys();
//
// keys.push("more");
// // Error: keys.push is not a function
// // Ошибка: keys.push -- это не функция

// Почему? Что нужно поправить в коде, чтобы вызов keys.push сработал?
let map = new Map();
map.set("name", "john");
let keys = [...map.keys()];
keys.push("more");
console.log(keys);


console.log('----------------------');

// Есть массив сообщений:
//
//     let messages = [
//         {text: "Hello", from: "John"},
//         {text: "How goes?", from: "John"},
//         {text: "See you soon", from: "Alice"}
//     ];
// У вас есть к ним доступ, но управление этим массивом происходит где-то ещё. Добавляются новые сообщения и удаляются старые,
//  и вы не знаете в какой момент это может произойти.Имея такую вводную информацию, решите,
// какую структуру данных вы могли бы использовать для ответа на вопрос «было ли сообщение прочитано?».
// Структура должна быть подходящей, чтобы можно было однозначно сказать, было ли прочитано это сообщение для каждого объекта сообщения.
// P.S. Когда сообщение удаляется из массива messages, оно должно также исчезать из структуры данных.
//  P.P.S. Нам не следует модифицировать сами объекты сообщений, добавлять туда свойства. Если сообщения принадлежат какому-то другому коду,
// то это может привести к плохим последствиям.
let messages = [
        {text: "Hello", from: "John"},
        {text: "How goes?", from: "John"},
        {text: "See you soon", from: "Alice"}
    ];

const readMessages = new WeakSet();

readMessages.add(messages[0]);
readMessages.add(messages[1]);


console.log(readMessages.has(messages[0]));
messages.shift();
console.log(messages);


console.log('----------------------');

// Задача.какую структуру данных вы бы предложили использовать для хранения информации о том, когда сообщение было прочитано?
//     В предыдущем задании нам нужно было сохранить только факт прочтения «да или нет». Теперь же нам нужно сохранить дату,
//     и она должна исчезнуть из памяти при удалении «сборщиком мусора» сообщения.
//     P.S. Даты в JavaScript можно хранить как объекты встроенного класса Date, которые мы разберём позднее.

let messages1 = [
    {text: "Hello", from: "John"},
    {text: "How goes?", from: "John"},
    {text: "See you soon", from: "Alice"}
];

let readMap = new WeakMap();

readMap.set(messages1[0], new Date(2022, 1, 19));
console.log(readMap);